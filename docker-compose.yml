services:
  front:
    build:
      dockerfile: Dockerfile
      context: ./app
    container_name: front
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - products
      - shopping
      - customer
    volumes:
      - ./app:/app
    networks:
      - app-network
  nosql-db-products:
    image: mongo:latest
    ports:
      - "27017:27017" # Default port for products service
    container_name: nosql-db-products
    volumes:
      - db-products:/data/db
    networks:
      - app-network
    environment:
      MONGO_INITDB_DATABASE: products_db
      BASE_URL : "http://localhost/"

  products:
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      nosql-db-products:
        condition: service_started
    volumes:
      - ./products:/app/products
    environment:
      DB_HOST: nosql-db-products
      DB_PORT: 27017
      DB_NAME: products_db

      APP_SECRET: "a_great_secret"
      MONGODB_URI: "mongodb://nosql-db-products:27017/products_db"
      MSG_QUEUE_URL: "amqp://guest:guest@rabbitmq:5672"
      EXCHANGE_NAME: "ONLINE_STORE"
      PORT: "8002"
      BASE_URL: "http://localhost:8002/"
    networks:
      - app-network

  nosql-db-shopping:
    image: mongo:latest
    ports:
      - "27018:27017"
    container_name: nosql-db-shopping
    volumes:
      - db-shopping:/data/db
    networks:
      - app-network
    environment:
      MONGO_INITDB_DATABASE: shopping_db

  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - "nosql-db-shopping"
      - "rabbitmq"
    volumes:
      - ./shopping:/app/shopping
    environment:
      DB_HOST: nosql-db-shopping
      DB_PORT: 27017
      DB_NAME: shopping_db
    networks:
      - app-network

  nosql-db-customer:
    image: mongo:latest
    ports:
      - "27019:27017"
    container_name: nosql-db-customer
    volumes:
      - db-customer:/data/db
    networks:
      - app-network
    environment:
      MONGO_INITDB_DATABASE: customer_db

  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db-customer"
      - "rabbitmq"
    volumes:
      - ./customer:/app/customer
    environment:
      DB_HOST: nosql-db-customer
      DB_PORT: 27017
      DB_NAME: customer_db
    networks:
      - app-network
  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - products
      - shopping
      - customer
    ports:
      - 80:80
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-products:
    driver: local
  db-shopping:
    driver: local
  db-customer:
    driver: local
